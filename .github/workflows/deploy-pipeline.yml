name: Deploy Pipeline
on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed
  push:
    branches:
      - "main"

jobs:
  build-and-push-image:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/riccardoalv/vanda:main
            ghcr.io/riccardoalv/vanda:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_USER }}" >> .env
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env
          echo "DEBUG=0" >> .env

      - name: Docker Stack Deploy
        env:
          GIT_COMMIT_HASH: ${{ github.sha }}
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          stack_name: vanda
          registry: "ghcr.io"
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          stack_file: docker-stack.yml
          remote_private_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
